{"version":3,"sources":["components/Apply.tsx","components/About.tsx","components/FAQ.tsx","components/Tutorial.tsx","components/Splash.tsx","components/Tracker.tsx","components/App.tsx","index.tsx"],"names":["Apply","react_default","a","createElement","Card_default","className","Body","Title","Text","target","href","Button_default","id","variant","About","Row_default","Col_default","md","span","Jumbotron_default","components_Apply","FAQ","react_router_dom","to","tutorialSelectStyles","control","provided","Object","objectSpread","background","border","border-bottom","&:hover","border-radius","boxShadow","caret-color","color","cursor","height","engineName","isSafari","min-height","& > *","marginTop","undefined","marginBottom","marginLeft","marginRight","dropdownIndicator","indicatorSeparator","backgroundColor","singleValue","maxWidth","position","transform","option","_ref","isSelected","isFocused","&:active","TutorialSelect","props","react_select_esm","assign","isSearchable","styles","Tutorial","_useState","useState","_useState2","slicedToArray","step","setStep","_useState3","_useState4","stepChanged","setStepChanged","_useState5","_useState6","stakedAmount","setStakedAmount","_useState7","value","label","_useState8","stakedCurrency","setStakedCurrency","_useState9","_useState10","stakedDuration","setStakedDuration","_useState11","_useState12","paymentCurrency","setPaymentCurrency","useEffect","tutorialRef","current","tutorialTop","getBoundingClientRect","top","window","scroll","scrollY","setStepAndScroll","newStep","dummyAddresses","XTZ","ATOM","usdPrices","BTC","ETH","symbol","duration","rewards","parseFloat","rewardsUsd","paymentSymbol","purchasePriceUsd","purchasePricePay","Form_default","AutosizeInput_default","type","onChange","event","amount","length","onBlur","toFixed","Tutorial_TutorialSelect","options","onClick","OverlayTrigger_default","placement","overlay","Tooltip_default","toPrecision","readOnly","substr","Splash","useRef","ref","components_Tutorial","ReactGA","initialize","withTracker","WrappedComponent","arguments","page","location","pathname","set","pageview","App","Container_default","Badge_default","xs","activeClassName","exact","react_router","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.36f954c4.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport React from 'react';\n\nconst Apply: React.FC = () => (\n  <Card className=\"card-info card-active card-static\">\n    <Card.Body>\n      <Card.Title>\n        <b>Join our alpha!</b>\n      </Card.Title>\n      <Card.Text>\n        We're looking for users to purchase our initial run of staking\n        contracts.\n        <br />\n        <br />\n        Applications will be reviewed on a rolling basis, so please take a brief\n        moment to tell us about your staking needs:\n      </Card.Text>\n      <a target=\"_\" href=\"https://forms.gle/viP5yF9Aux5YmmU27\">\n        <Button id=\"apply\" variant=\"primary\">\n          Apply Now\n        </Button>\n      </a>\n    </Card.Body>\n  </Card>\n);\n\nexport default Apply;\n","import Apply from './Apply';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\n\nconst About: React.FC<RouteComponentProps> = () => (\n  <div className=\"info-root\">\n    <Row className=\"top-buffer\">\n      <Col md={{ span: 8 }}>\n        <Jumbotron>\n          <h1>About</h1>\n          <p className=\"info-body-first\">\n            <b>Vest</b> is brought to you by{' '}\n            <a target=\"_\" href=\"https://cambrian.dev\">\n              Cambrian Tech\n            </a>\n            , a crypto-focused product lab. We're a Series A company backed by{' '}\n            <a target=\"_\" href=\"https://polychain.capital\">\n              Polychain Capital\n            </a>\n            ,{' '}\n            <a target=\"_\" href=\"https://a16z.com\">\n              a16z\n            </a>\n            , and{' '}\n            <a target=\"_\" href=\"https://www.1confirmation.com\">\n              1confirmation\n            </a>{' '}\n            (among others), and we're based out of downtown San Francisco.\n          </p>\n          <p>\n            Our team of developers previously graduated from Stanford. Their\n            work experience includes companies like Google, Twitter, and Jane\n            Street.\n          </p>\n          <p>\n            We'd love to chat!\n            <br />\n            <a href=\"mailto:tech@cambrian.dev\">tech@cambrian.dev</a>\n          </p>\n        </Jumbotron>\n      </Col>\n      <Col md={{ span: 4 }}>\n        <Apply />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default About;\n","import { NavLink, RouteComponentProps } from 'react-router-dom';\n\nimport Apply from './Apply';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\n\nconst FAQ: React.FC<RouteComponentProps> = () => (\n  <div className=\"info-root\">\n    <Row className=\"top-buffer\">\n      <Col md={{ span: 8 }}>\n        <Jumbotron>\n          <h1>FAQ</h1>\n          <p className=\"info-body-first faq-header\">What is Vest?</p>\n          <p>\n            Vest lets you purchase the rights to Proof-of-Stake mining rewards.\n            These purchases are known as \n            <span className=\"faq-highlight\">staking contracts</span>. You’ll\n            find a detailed description of staking contracts below, and be sure\n            to check out the <NavLink to=\"/\">demo</NavLink> on our front page!\n          </p>\n          <hr className=\"faq-rule\" />\n          <p className=\"faq-header\">What is a staking contract?</p>\n          <p>\n            You pay: <span className=\"faq-math\">X</span> tokens.\n            <br />\n            You receive: Rewards from staking \n            <span className=\"faq-math\">Z</span> tokens for duration{' '}\n            <span className=\"faq-math\">T</span>.\n          </p>\n          <p>\n            <i>Example:</i>\n          </p>\n          <p>\n            Alice operates a staking firm, which stakes 10,000,000 Tezzies. The\n            expected annual staking yield of Tezzies is ~7.5% (i.e. Alice\n            expects to earn ~750,000 Tezzies a year). However, Alice's staking\n            operation has fixed yearly bills to pay and needs some money\n            up-front. Alice can sell the rights to her future staking rewards!\n          </p>\n          <p>\n            Alice forms a staking contract with Bob, selling the rights to half\n            of her staking rewards over the next year. Specifically, Bob pays\n            Alice \n            <span className=\"faq-math\">X</span> Tezzies and, in return, will\n            receive the rewards of staking 5,000,000 Tezzies for 1 year, where \n            <span className=\"faq-math\">X</span>\n             is some price <span className=\"faq-math\">&lt;=</span> 375,000\n            Tezzies, with the discount accounting for Bob's risk and opportunity\n            cost.\n          </p>\n          <hr className=\"faq-rule\" />\n          <p className=\"faq-header\">\n            How is buying a staking contract different than simply buying tokens\n            and staking them yourself?\n          </p>\n          <p>\n            Vanilla staking and staking contracts are different assets with\n            distinct risk-reward profiles.\n          </p>\n          <p>\n            In vanilla staking, a party stakes{' '}\n            <span className=\"faq-math\">Y</span> tokens and earns a staking\n            reward, proportional to <span className=\"faq-math\">Y</span>, per\n            unit of time.\n          </p>\n          <p>\n            In a staking contract, by contrast, a party purchases the rights to{' '}\n            <span className=\"faq-highlight\">someone else’s</span> staking\n            rewards for some duration. Notably, the purchaser of a staking\n            contract <span className=\"faq-highlight\">(1)</span> does not need to\n            stake tokens and <span className=\"faq-highlight\">(2)</span> is not\n            purchasing the rights to any underlying stake, just the staking\n            rewards.\n          </p>\n          <p>\n            <i>Example:</i>\n          </p>\n          <p>\n            Suppose Alice has <span className=\"faq-highlight\">$100</span> and\n            wants to invest in Tezos staking rewards for 3 months. \n          </p>\n          <ul>\n            <li>\n              <span className=\"faq-highlight\">Vanilla Staking:</span> Alice\n              purchases <span className=\"faq-math\">Y</span> Tezzies ($100 worth)\n              and stakes them for 3 months. Alice earns \n              <span className=\"faq-math\">(r * Y)</span> Tezzies in rewards,\n              where <span className=\"faq-math\">r</span> is the Tezos staking\n              yield rate for the 3 month duration. After 3 months, assuming no\n              slashing, Alice additionally receives back her stake of{' '}\n              <span className=\"faq-math\">Y</span> Tezzies.\n              <br />\n              <br />\n              <ul className=\"ul-indent\">\n                <li>\n                  Starting Value = <span className=\"faq-math\">Y</span> Tezzies\n                  <br />\n                </li>\n                <li>\n                  Final Value = <span className=\"faq-math\">(Y + r * Y)</span>{' '}\n                  Tezzies\n                  <br />\n                </li>\n                <li>\n                  Profit = Final <b>&ndash;</b> Starting ={' '}\n                  <span className=\"faq-math\">(r * Y)</span> Tezzies\n                  <br />\n                </li>\n              </ul>\n            </li>\n            <br />\n            <li>\n              <span className=\"faq-highlight\">Staking Contract:</span> Alice\n              purchases a Tezos staking contract for{' '}\n              <span className=\"faq-math\">Y</span> Tezzies ($100 worth), which\n              she pays up front to the staker. The staker then stakes \n              <span className=\"faq-math\">Z</span> Tezzies for 3 months, and\n              Alice earns <span className=\"faq-math\">(r * Z)</span> Tezzies in\n              rewards.\n              <br />\n              <br />\n              <ul className=\"ul-indent\">\n                <li>\n                  Starting Value = <span className=\"faq-math\">Y</span> Tezzies\n                  <br />\n                </li>\n                <li>\n                  Final Value = <span className=\"faq-math\">(r * Z)</span>{' '}\n                  Tezzies\n                  <br />\n                </li>\n                <li>\n                  Profit = Final <b>&ndash;</b> Starting ={' '}\n                  <span className=\"faq-math\">(r * Z - Y)</span> Tezzies\n                  <br />\n                </li>\n              </ul>\n            </li>\n          </ul>\n          <p>\n            The amount staked in the latter case (\n            <span className=\"faq-math\">Z</span>) should usually be greater than\n            the amount staked in the former case (\n            <span className=\"faq-math\">Y</span>), since the purchaser of a\n            staking contract only receives the staking yield and not the\n            principal. Formally, a rational purchaser will only buy a staking\n            contract if \n            <span className=\"faq-math\">r * Z - Y &gt;= r * Y</span>, implying\n            that \n            <span className=\"faq-math\">Z &gt;= Y + Y / r</span>.\n          </p>\n          <p>\n            Note that both currency risk (e.g. cashing out to dollars in the\n            end) and staking yield variance can complicate the risk-reward\n            analysis of staking contracts, and we encourage purchasers to think\n            through some of these issues for themselves. \n            <span className=\"faq-highlight\">\n              Of course, we are always happy to help!\n            </span>\n          </p>\n          <hr className=\"faq-rule\" />\n          <p className=\"faq-header\">How are staking contracts priced?</p>\n          <p>Recall the definition of a staking contract:</p>\n          <ul>\n            <li>\n              You pay: <span className=\"faq-math\">X</span> tokens.\n            </li>\n            <li>\n              You receive: Rewards from staking \n              <span className=\"faq-math\">Z</span> tokens for duration{' '}\n              <span className=\"faq-math\">T</span>.\n            </li>\n          </ul>\n          <p>The price of a staking contract can be modeled as:</p>\n          <ul>\n            <li>\n              <span className=\"faq-math\">X</span> = the expected reward value of\n              staking <span className=\"faq-math\">Z</span> tokens for duration{' '}\n              <span className=\"faq-math\">T</span> &ndash; a discount for risk\n              and opportunity cost\n            </li>\n          </ul>\n          <p>Where:</p>\n          <ul>\n            <li>\n              The risk is a combination of risk factors including: variance in\n              token price and staking yield, counterparty risk, and other\n              factors.\n            </li>\n            <li>\n              The opportunity cost is due to the purchaser trading present value\n              (<span className=\"faq-math\">X</span>) for future value (rewards of\n              staking <span className=\"faq-math\">Z</span> for duration{' '}\n              <span className=\"faq-math\">T</span>).\n            </li>\n          </ul>\n          <hr className=\"faq-rule\" />\n          <p className=\"faq-header\">Why are staking contracts useful?</p>\n          <p className=\"faq-highlight\">For sellers (stakers):</p>\n          <ul>\n            <li>\n              Increase your liquidity (trade future staking rewards for some\n              present value).\n            </li>\n            <li>\n              Reduce variance in revenue (trade highly variable staking rewards\n              for some fixed value).\n            </li>\n          </ul>\n          <p className=\"faq-highlight\">For buyers:</p>\n          <ul>\n            <li>Avoid locking up funds as PoS collateral.</li>\n            <li>Take leveraged bets on staking rewards.</li>\n            <li>\n              Invest in a novel crypto asset, with a distinct risk-return\n              profile, in an industry dominated by highly positively correlated\n              assets.\n            </li>\n            <li>Profit from an appetite for risk and HODLing.</li>\n          </ul>\n          <hr className=\"faq-rule\" />\n          <p className=\"faq-header\">Who is performing the staking?</p>\n          <p>\n            The staking will initially be performed by Vest in collaboration\n            with{' '}\n            <a href=\"https://polychain.capital\" target=\"_\">\n              Polychain Labs\n            </a>\n            .\n          </p>\n          <p>\n            Polychain Labs is one of the most extensive staking operations in\n            the industry. They currently operate the largest Cosmos validator\n            and non-foundation Tezos baker. Their security team hails from\n            Coinbase, JPL, and Google (among others).\n          </p>\n          <p>\n            As we scale, we plan to introduce more stakers—though we will always\n            prioritize reliability and security.\n          </p>\n        </Jumbotron>\n      </Col>\n      <Col md={{ span: 4 }}>\n        <Apply />\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default FAQ;\n","import React, { useEffect, useState } from 'react';\nimport { engineName, isSafari } from 'react-device-detect';\n\nimport AutosizeInput from 'react-input-autosize';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Select from 'react-select';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\n// Many sad hacks here for cross-browser consistency.\n// Do not try this at home.\nconst tutorialSelectStyles = {\n  control: (provided: object) => ({\n    ...provided,\n    background: 'transparent',\n    border: 'none',\n    'border-bottom': 'none',\n    '&:hover': { 'border-bottom': 'none' },\n    'border-radius': 0,\n    boxShadow: 'none',\n    'caret-color': 'transparent',\n    color: 'white',\n    cursor: 'pointer',\n    height: engineName === 'WebKit' ? (isSafari ? '34px' : '35px') : '33.5px',\n    'min-height':\n      engineName === 'WebKit' ? (isSafari ? '34px' : '35px') : '33.5px',\n    '& > *': {\n      marginTop: engineName === 'WebKit' ? undefined : '-4px',\n      marginBottom: isSafari ? undefined : 'auto'\n    },\n    marginLeft: -5,\n    marginRight: -5\n  }),\n  dropdownIndicator: (provided: object) => ({\n    ...provided,\n    color: 'white',\n    '&:hover': { color: 'white' }\n  }),\n  indicatorSeparator: (provided: object) => ({\n    ...provided,\n    backgroundColor: 'white',\n    height: '15px',\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  }),\n  singleValue: (provided: object) => ({\n    ...provided,\n    color: 'yellow',\n    marginBottom: isSafari ? undefined : 'auto',\n    maxWidth: undefined,\n    position: undefined,\n    transform: undefined\n  }),\n  option: (\n    provided: object,\n    { isSelected, isFocused }: { isSelected: boolean; isFocused: boolean }\n  ) => ({\n    ...provided,\n    color: 'black',\n    background: isSelected ? 'lightskyblue' : isFocused ? '#eee' : 'white',\n    '&:active': {\n      background: isSelected ? 'lightskyblue' : isFocused ? '#eee' : 'white'\n    }\n  })\n};\n\nconst TutorialSelect: React.FC<any> = (props: any) => (\n  <div className=\"inline-select-wrapper\">\n    <Select {...props} isSearchable={false} styles={tutorialSelectStyles} />\n  </div>\n);\n\nconst Tutorial: React.FC<{\n  tutorialRef: React.MutableRefObject<any>;\n}> = (props: { tutorialRef: React.MutableRefObject<any> }) => {\n  const [step, setStep] = useState(1);\n  const [stepChanged, setStepChanged] = useState(false);\n  const [stakedAmount, setStakedAmount] = useState('1000.00');\n  const [stakedCurrency, setStakedCurrency] = useState({\n    value: 'XTZ',\n    label: 'Tezzies'\n  });\n  const [stakedDuration, setStakedDuration] = useState({\n    value: 3,\n    label: '3 month'\n  });\n  const [paymentCurrency, setPaymentCurrency] = useState({\n    value: 'BTC',\n    label: 'BTC'\n  });\n\n  // Scroll to top of tutorial.\n  useEffect(() => {\n    if (props.tutorialRef.current !== null && stepChanged) {\n      const tutorialTop = props.tutorialRef.current.getBoundingClientRect().top;\n      window.scroll({ top: tutorialTop + window.scrollY - 20 });\n      setStepChanged(false);\n    }\n  }, [props.tutorialRef, stepChanged]);\n\n  // Set step and request scroll to start of tutorial.\n  const setStepAndScroll = (newStep: number) => {\n    if (newStep !== step) {\n      setStep(newStep);\n      setStepChanged(true);\n    }\n  };\n\n  // Crimp inputs to 8 characters.\n  const setStakedAmountOnChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const amount = event.target.value;\n    if (amount.length <= 8) {\n      setStakedAmount(amount);\n    }\n  };\n\n  // Crimp input values on blur.\n  const setStakedAmountOnBlur = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    let amount = parseFloat(stakedAmount) || 1000;\n    if (amount >= 100000 || amount <= 0) {\n      amount = 1000;\n    }\n    setStakedAmount(amount.toFixed(2));\n  };\n\n  // Currency-specific properties.\n  const dummyAddresses: { [index: string]: string } = {\n    XTZ: 'KT1ExampleAddress',\n    ATOM: 'cosmos1ExampleAddress'\n  };\n  const dummyPaymentAddresses: { [index: string]: string } = {\n    BTC: '1A1zP1eP5QGefi2',\n    ETH: '0xC02aaA39b223F'\n  };\n  const rates: { [index: string]: number } = {\n    XTZ: 0.0059,\n    ATOM: 0.0105\n  };\n  // As of 26 May 2019 on CoinMarketCap.\n  const usdPrices: { [index: string]: number } = {\n    BTC: 8730.59,\n    ETH: 267.92,\n    XTZ: 1.67,\n    ATOM: 4.56\n  };\n\n  // Calculate compounded rewards using MPR.\n  const symbol = stakedCurrency.value;\n  const duration = stakedDuration.value;\n  const rewards = parseFloat(stakedAmount) * rates[symbol] * duration;\n  const rewardsUsd = rewards * usdPrices[symbol];\n\n  // Calculate purchase price in BTC/USD.\n  const contractDiscount = 0.6;\n  const paymentSymbol = paymentCurrency.value;\n  const purchasePriceUsd = contractDiscount * rewards * usdPrices[symbol];\n  const purchasePricePay = purchasePriceUsd / usdPrices[paymentSymbol];\n\n  return (\n    <Row className=\"top-buffer\">\n      <Col className=\"order-md-12\">\n        <div id=\"tutorial-header\" className=\"tutorial-highlight\">\n          Example:\n        </div>\n        <code>\n          {step === 1 && (\n            <Form className=\"tutorial-form\">\n              You are purchasing the rewards from staking{' '}\n              <AutosizeInput\n                className=\"autosize-input\"\n                type=\"text\"\n                value={stakedAmount}\n                onChange={setStakedAmountOnChange}\n                onBlur={setStakedAmountOnBlur}\n              />{' '}\n              <TutorialSelect\n                options={[\n                  { value: 'XTZ', label: 'Tezzies' },\n                  { value: 'ATOM', label: 'Cosmos' }\n                ]}\n                value={stakedCurrency}\n                onChange={(value: { value: string; label: string }) =>\n                  setStakedCurrency(value)\n                }\n              />{' '}\n              for a{' '}\n              <TutorialSelect\n                options={[\n                  { value: 3, label: '3 month' },\n                  { value: 6, label: '6 month' },\n                  { value: 9, label: '9 month' }\n                ]}\n                value={stakedDuration}\n                onChange={(value: { value: number; label: string }) =>\n                  setStakedDuration(value)\n                }\n              />{' '}\n              duration...{' '}\n              <Button variant=\"dark\" onClick={() => setStepAndScroll(2)}>\n                Continue\n              </Button>\n            </Form>\n          )}\n          {step === 2 && (\n            <Form className=\"tutorial-form\">\n              ...which will cost you{' '}\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={\n                  <Tooltip className=\"tooltip-code\" id={`tooltip-cost`}>\n                    ${purchasePriceUsd.toFixed(2)} as of May 26\n                  </Tooltip>\n                }\n              >\n                <span className=\"tutorial-highlight\">\n                  {purchasePricePay.toPrecision(2)}\n                </span>\n              </OverlayTrigger>{' '}\n              <TutorialSelect\n                options={[\n                  { value: 'BTC', label: 'BTC' },\n                  { value: 'ETH', label: 'ETH' }\n                ]}\n                value={paymentCurrency}\n                onChange={(value: { value: string; label: string }) =>\n                  setPaymentCurrency(value)\n                }\n              />{' '}\n              up front. You are currently estimated to earn{' '}\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={\n                  <Tooltip className=\"tooltip-code\" id={`tooltip-rewards`}>\n                    ${rewardsUsd.toFixed(2)} as of May 26\n                  </Tooltip>\n                }\n              >\n                <span className=\"tutorial-highlight\">{rewards.toFixed(2)}</span>\n              </OverlayTrigger>{' '}\n              <span className=\"tutorial-highlight\">{symbol}</span> in rewards\n              (variable).\n              <br />\n              <br />\n              Please enter your {symbol} payout address:{' '}\n              <AutosizeInput\n                className=\"autosize-input\"\n                type=\"text\"\n                value={dummyAddresses[symbol]}\n                readOnly\n              />{' '}\n              <Button variant=\"dark\" onClick={() => setStepAndScroll(3)}>\n                Submit\n              </Button>\n            </Form>\n          )}\n          {step === 3 && (\n            <div id=\"tutorial-confirm\">\n              Your staking contract has been confirmed!\n              <br />\n              <br />\n              Please send{' '}\n              <span className=\"tutorial-highlight\">\n                {purchasePricePay.toPrecision(2)} {paymentSymbol}\n              </span>{' '}\n              to the following payment address within the next 24 hours:{' '}\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={\n                  <Tooltip\n                    className=\"tooltip-code\"\n                    id={`tooltip-example-address`}\n                  >\n                    Example Address\n                  </Tooltip>\n                }\n              >\n                <span className=\"tutorial-highlight\">\n                  {dummyPaymentAddresses[paymentSymbol]}\n                </span>\n              </OverlayTrigger>\n              .\n              <br />\n              <br />\n              Once payment is confirmed, you should begin receiving the rewards\n              from staking{' '}\n              <span className=\"tutorial-highlight\">\n                {stakedAmount} {symbol}\n              </span>{' '}\n              for a{' '}\n              <span className=\"tutorial-highlight\">{stakedDuration.label}</span>{' '}\n              duration, paid out to your address beginning in{' '}\n              <span className=\"tutorial-highlight\">\n                {dummyAddresses[symbol].substr(0, 9)}\n              </span>\n              .\n              <br />\n              <br />\n              Your order code is{' '}\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={\n                  <Tooltip\n                    className=\"tooltip-code\"\n                    id={`tooltip-example-order`}\n                  >\n                    Example Order Code\n                  </Tooltip>\n                }\n              >\n                <span className=\"tutorial-highlight\">7GA3K9ME25B</span>\n              </OverlayTrigger>\n              .\n            </div>\n          )}\n        </code>\n      </Col>\n      <Col\n        id=\"tutorial-steps\"\n        md={{ span: 6 }}\n        className=\"top-buffer-sm order-md-1\"\n      >\n        <Card\n          className={'card-info ' + (step === 1 ? 'card-active' : '')}\n          onClick={() => setStepAndScroll(1)}\n        >\n          <Card.Body>\n            <Card.Title>\n              <b>Step 1: Select Terms</b>\n            </Card.Title>\n            <Card.Text>\n              Select a token, amount to stake, and duration to stake. These are\n              the <i>terms</i> of your staking contract.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card\n          className={\n            'card-info top-buffer ' + (step === 2 ? 'card-active' : '')\n          }\n          onClick={() => setStepAndScroll(2)}\n        >\n          <Card.Body>\n            <Card.Title>\n              <b>Step 2: Checkout</b>\n            </Card.Title>\n            <Card.Text>\n              Select a purchase currency and review the quoted price for your\n              contract. If everything looks correct, submit a{' '}\n              <i>payout address</i> for receiving your rewards.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card\n          className={\n            'card-info top-buffer ' + (step === 3 ? 'card-active' : '')\n          }\n          onClick={() => setStepAndScroll(3)}\n        >\n          <Card.Body>\n            <Card.Title>\n              <b>Step 3: Confirmation</b>\n            </Card.Title>\n            <Card.Text>\n              After checkout, you'll see a <i>payment address</i> and an{' '}\n              <i>order code</i>. Send the indicated amount of currency to this\n              address within 24 hours (or you'll have to checkout again).\n              <br />\n              <br />\n              Once the payment is fulfilled, watch the rewards roll in to your\n              payout address! You can sit back and relax, but if you have any\n              further questions, simply contact us with your order code.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Tutorial;\n","import { NavLink, RouteComponentProps } from 'react-router-dom';\n\nimport Apply from './Apply';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Tutorial from './Tutorial';\nimport { useRef } from 'react';\n\nconst Splash: React.FC<RouteComponentProps> = () => {\n  const tutorialRef = useRef<any>(null);\n\n  return (\n    <div>\n      <Row className=\"top-buffer\">\n        <Col md={{ span: 8 }}>\n          <Jumbotron>\n            <h1>\n              <b>Staking With Leverage</b>\n            </h1>\n            <h3>\n              <span className=\"chevron\">>></span> Earn rewards from the largest\n              PoS miners.\n            </h3>\n            <hr id=\"splash-rule\" />\n            <p className=\"splash-description\">\n              Vest lets you purchase the rights to Proof-of-Stake (PoS) mining\n              rewards.\n            </p>\n            <p className=\"splash-description\">\n              Capture profits{' '}\n              <span className=\"splash-highlight\">\n                without locking your own funds\n              </span>{' '}\n              in a volatile asset. Take a{' '}\n              <span className=\"splash-highlight\">leveraged bet</span> by\n              receiving the rewards of massive staking operations.\n            </p>\n            <p className=\"splash-description\">\n              By partnering with only the most reputable stakers, we offer you\n              exceptional reliability and industry-leading profit margins. View\n              our <NavLink to=\"/faq\">FAQ</NavLink> for details!\n            </p>\n          </Jumbotron>\n        </Col>\n        <Col md={{ span: 4 }}>\n          <Apply />\n        </Col>\n      </Row>\n      <Row className=\"top-buffer-section\">\n        <Col ref={tutorialRef}>\n          <h3 className=\"subheader\">How It Works</h3>\n          <Tutorial tutorialRef={tutorialRef} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Splash;\n","import React, { useEffect } from 'react';\nimport ReactGA, { FieldsObject } from 'react-ga';\n\nimport { RouteComponentProps } from 'react-router-dom';\n\nReactGA.initialize('UA-123837923-3');\n\nexport const withTracker = <P extends RouteComponentProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: FieldsObject = {}\n) => {\n  const trackPage = (page: string) => {\n    ReactGA.set({ page, ...options });\n    ReactGA.pageview(page);\n  };\n\n  return (props: P) => {\n    useEffect(() => {\n      trackPage(props.location.pathname);\n    }, [props.location.pathname]);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n","import {\n  Link,\n  NavLink,\n  Redirect,\n  Route,\n  HashRouter as Router,\n  Switch\n} from 'react-router-dom';\n\nimport About from './About';\nimport Badge from 'react-bootstrap/Badge';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport FAQ from './FAQ';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Splash from './Splash';\nimport { withTracker } from './Tracker';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Container className=\"top-buffer\">\n        <Row>\n          <Col>\n            <h1 id=\"title\">\n              <Link to=\"\">\n                <Badge>Vest</Badge>\n              </Link>\n            </h1>\n          </Col>\n          <Col xs={{ span: 8 }} className=\"text-right my-auto\">\n            <h4 id=\"menu\">\n              <NavLink to=\"/\" activeClassName=\"menu-active\">\n                <Badge>Home</Badge>\n              </NavLink>\n              ·\n              <NavLink to=\"/faq\" exact activeClassName=\"menu-active\">\n                <Badge>FAQ</Badge>\n              </NavLink>\n              ·\n              <NavLink to=\"/about\" exact activeClassName=\"menu-active\">\n                <Badge>About</Badge>\n              </NavLink>\n            </h4>\n          </Col>\n        </Row>\n        <Switch>\n          <Route path=\"/\" exact component={withTracker(Splash)} />\n          <Route path=\"/about\" component={withTracker(About)} />\n          <Route path=\"/faq\" component={withTracker(FAQ)} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Row id=\"footer\">\n          <Col>\n            ©2019{' '}\n            <a target=\"_\" href=\"https://cambrian.dev\">\n              Cambrian Technologies\n            </a>\n            . All rights reserved.\n          </Col>\n        </Row>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import './styles/index.css';\nimport './styles/custom.scss';\n\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// TODO: Google Analytics and TypeForm.\nReactDOM.render(\n  // TODO: Add strict mode back (`react-bootstrap` caused problems).\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}